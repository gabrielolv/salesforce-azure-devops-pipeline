trigger:
  - develop
  - test
  - uat
  - main

parameters:
  - name: CommitHash
    type: string
    default: ''

stages:
# ─────────────── BUILD & VALIDATION ─────────────── 
- stage: BuildAndValidate
  displayName: "Build and Pre-Deployment Validation"
  jobs:
  - job: BuildAndValidateJob
    displayName: "Build and Validate Job"
    condition: always()
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      - ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
            - group: sfdev
      - ${{ if eq(variables['Build.SourceBranchName'], 'test') }}:
            - group: sftest
      - ${{ if eq(variables['Build.SourceBranchName'], 'uat') }}:
            - group: sfuat
      - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
            - group: sfprod-predeployment
            
      - name: system.debug
        value: true

      - name: commitHashParam
        value: ${{parameters.CommitHash}}

    steps:
      - checkout: self
        persistCredentials: true
        fetchDepth: 0
        displayName: "Checkout repository"

      - template: templates/install-sf-cli.yml

      - template: templates/get-commit-hash.yml
        parameters:
          commitHashParam: $(commitHashParam)

      - template: templates/get-last-successful-commit.yml
        parameters:
          commitHashVariable: $(commitHash)

      - template: templates/install-plugin.yml 

      - template: templates/generate-delta.yml
        parameters:
          commit_hash: $(commitHash)   

      - task: Bash@3
        inputs:
          targetType: "inline"
          script: |
            echo "Generating sf command for running tests..."
            # Run the Node.js script
            sfCommandTests=$(node -e "require('./pipelines/GenerateSfdxCommand.js')();") 

            # Set the Azure DevOps pipeline variable
            echo "##vso[task.setvariable variable=sfCommandTests]$sfCommandTests"
            echo "sfCommandTests: $sfCommandTests"
        displayName: "Generate sf command for running tests"

      - template: templates/sf-login.yml
        parameters:
          sf_username: $(SF_USERNAME)
          sf_password: $(SF_PASSWORD)
          sf_client_id: $(SF_CLIENT_ID)
          sf_client_secret: $(SF_CLIENT_SECRET)
          sf_login_url: $(SF_LOGIN_URL)

      - template: templates/sf-check-deploy.yml
        parameters:
          includeSfCommandTests: true
          displayName: "Check to deploy to Salesforce"

      - template: templates/sf-check-deploy.yml
        parameters:
          runAllTests: true
          displayName: "Run all tests"

# ─────────────── NON-PRODUCTION DEPLOYMENT ───────────────
- stage: DeployToNonProd
  displayName: "non-Prod Deployment"
  dependsOn: BuildAndValidate
  condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'main'))

  variables:
      - ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
            - group: sfdev
      - ${{ if eq(variables['Build.SourceBranchName'], 'test') }}:
            - group: sftest
      - ${{ if eq(variables['Build.SourceBranchName'], 'uat') }}:
            - group: sfuat--predeployment

  jobs:
    - job: DeployToNonProdJob
      displayName: "Deploy to Non-Prod Org"
      pool:
        vmImage: 'ubuntu-latest'

      steps:
        - checkout: self
          persistCredentials: true
          fetchDepth: 0

        - template: templates/install-sf-cli.yml

        - template: templates/get-last-successful-commit.yml
          parameters:
            commitHashVariable: $(commitHash)

        - template: templates/install-plugin.yml

        - template: templates/generate-delta.yml
          parameters:
            commit_hash: $(commitHash)

        - template: templates/sf-login.yml
          parameters:
            sf_username: $(SF_USERNAME)
            sf_password: $(SF_PASSWORD)
            sf_client_id: $(SF_CLIENT_ID)
            sf_client_secret: $(SF_CLIENT_SECRET)
            sf_login_url: $(SF_LOGIN_URL)

        - template: templates/sf-deploy.yml

# ─────────────── PRODUCTION DEPLOYMENT ───────────────
- stage: DeployToProd
  displayName: "Production Deployment"
  dependsOn: BuildAndValidate
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))

  variables:
    - group: sfprod  # Approval is only required for this group

  jobs:
    - job: DeployToProdJob
      displayName: "Deploy to Production"
      pool:
        vmImage: 'ubuntu-latest'

      steps:
        - checkout: self
          persistCredentials: true
          fetchDepth: 0

        - template: templates/install-sf-cli.yml

        - template: templates/get-last-successful-commit.yml
          parameters:
            commitHashVariable: $(commitHash)

        - template: templates/install-plugin.yml

        - template: templates/generate-delta.yml
          parameters:
            commit_hash: $(commitHash)

        - template: templates/sf-login.yml
          parameters:
            sf_username: $(SF_USERNAME)
            sf_password: $(SF_PASSWORD)
            sf_client_id: $(SF_CLIENT_ID)
            sf_client_secret: $(SF_CLIENT_SECRET)
            sf_login_url: $(SF_LOGIN_URL)

        - template: templates/sf-deploy.yml
